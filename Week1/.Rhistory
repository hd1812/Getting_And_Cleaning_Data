ls()
library(xlsx)
install.packages("xlsx")
colIndex <- 18:23
rowIndex <- 7:15
dat <- read.xlsx("./data/cameras.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
library(xlsx)
colIndex <- 18:23
rowIndex <- 7:15
dat <- read.xlsx("./data/cameras.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx ",destfile="gas.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx ",destfile="gas.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="gas.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="housing.csv")
?download.file
library(utils)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="housing.csv")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="housing.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="housing.csv",method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="housing.csv")
install.pacakges("RCurl")
install.packages("RCurl")
library(RCurl)
getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
dat <- read.xlsx("getdata-data-DATA.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
HouseData<-read.csv("housing.csv",header = TRUE)
x<-subset(HouseData,VAL==24,na.rm=TRUE)
str(x)
?read.csv
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
dat <- read.xlsx("gas.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
install.packages("XLConnect")
library(XLConnect)
Data <- readWorksheet(loadWorkbook("gas.xlsx"),sheet=1)
Data
?readWorkSheet
?readWorksheet
Data <- readWorksheet(loadWorkbook("gas.xlsx"),sheet=1,startRow=7,endRow=15,startCol=18,endCol=23)
str(Data)
library(XLConnect)
Data <- readWorksheet(loadWorkbook("gas.xlsx"),sheet=1,startRow=7,endRow=15,startCol=18,endCol=23)
str(Data)
Data
library(XLConnect)
Data <- readWorksheet(loadWorkbook("gas.xlsx"),sheet=1,startRow=7,endRow=15,startCol=18,endCol=23)
Data
sum(dat$Zip*dat$Ext,na.rm=T)
sum(Data$Zip*Data$Ext,na.rm=T)
Data <- readWorksheet(loadWorkbook("gas.xlsx"),sheet=1,startRow=18,endRow=23,startCol=7,endCol=15)
str(Data)
sum(Data$Zip*Data$Ext,na.rm=T)
install.packages("XML")
library(XML)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
##Q1
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="housing.csv")
HouseData<-read.csv("housing.csv",header = TRUE)
x<-subset(HouseData,VAL==24,na.rm=TRUE)
str(x)
##Q3
##The following code does not on ttp PC
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="gas.xlsx")
library(xlsx)
##RCurl package
library(RCurl)
getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
##XLConnect package
library(XLConnect)
Data <- readWorksheet(loadWorkbook("gas.xlsx"),sheet=1,startRow=18,endRow=23,startCol=7,endCol=15)
rowIndex <- 18:23
cowIndex <- 7:15
Data <- read.xlsx("gas.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
sum(Data$Zip*Data$Ext,na.rm=T)
##Q4
##XML package
library(XML)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
doc <- xmlTreeParse(fileURL)
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
doc <- getURL(fileURL)
?getURL
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL,useInternal=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ",destfile="Q8data.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="Q8data.csv")
?fread
install.packages("data.table")
library(data.table)
?fread
DT <- fread("Q8data.csv")
pwgtp15 
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
?tapply
?sapply
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="housing.csv",mode='wb')
Data <- read.xlsx("gas.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
Data <- read.xlsx("gas.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex,mode='wd')
system.time(rowMeans(DT)[DT$SEX==1])+system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))+system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
}
system.time(
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
)
system.time(
for (i in 1:100){
system.time(DT[,mean(pwgtp15),by=SEX])
}
)
system.time(
for (i in 1:100){
system.time(mean(DT$pwgtp15,by=DT$SEX))
}
)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
)
system.time(
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
)
system.time(
for (i in 1:100){
system.time(DT[,mean(pwgtp15),by=SEX])
}
)
system.time(
for (i in 1:100){
system.time(mean(DT$pwgtp15,by=DT$SEX))
}
)
system.time(
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
)
system.time(
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
)
q()
