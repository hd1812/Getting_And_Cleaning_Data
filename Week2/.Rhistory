?lapply
?split
library(datasets)
data(iris)
data
?iris
str(iris)
mean(iris$Sepal.Length,na.rm=TRUE)
mean(iris$Sepal.Length,na.rm=TRUE)
iris
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
mtcars
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
cylFour<-subset(mtcars,mtcars$cyl==4)
cylEight<-subset(mtcars,mtcars$cyl==8)
cylFour
mean(cylFour$hp)-mean(cylEight$hp)
debug(ls)
ls(asd,fd)
?ls
0
.Ob <- 1
ls(pattern = "O")
?debug
iris
v<-subset(iris,Species==virginica)
v<-subset(iris,iris$Species==virginica)
v<-subset(iris,iris$Species==virginica)
iris
v<-subset(iris,iris$Species==virinica)
v<-subset(iris,iris$Species==virginica)
iris.$Species
iris$Species
iris$Species==virginica
v<-subset(iris,iris$Species=="virginica")
v
mean(v$Sepal.Length)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcar
mtcars
q()
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("installr")
library(installr)
update()
installr()
install.packages("datasets")
install.packages("datasets")
library(datasets)
library(datasets)
hist(airquality$Ozone)
with(airquality,plot(Wind,Ozone))
airquality<-transform(airquality,Month=factor(Month))
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)")
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
legend("topright",pch=1,col=c("blue","red"),legned=c("May","Other Months"))
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(subset(airquality,Month!=5),points(Wind,Ozone,col="red"))
legend("topright",pch=1,col=c("blue","red"),legned=c("May","Other Months"))
legend("topright",pch=1,col=c("blue","red"),legend=c("May","Other Months"))
with(airquality,plot(Wind,Ozone,main="Ozone and Wind in NeW York City",pch=20))
model<-lm(Ozone~Wind,airquality)
abline(mode,lwd=2)
abline(model,lwd=2)
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext(â€œOzone and Weather in New York City", outer=TRUE)
mtext("Ozone and Weather in New York City",outer=TRUE)
})
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
})
####Base Plotting Demonstration
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
z<-rnorm(100)
plot(x,z)
par(mar=c(2,2,2,2))
####Base Plotting Demonstration
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
z<-rnorm(100)
plot(x,z)
par(mar=c(2,2,2,2))
setwd("C:/Users/DH/Desktop/Coursera Data Science/Getting_And_Cleaning_Data/Week2")
library(httr)
library(XML)
##Find OAuth settings for github
library(httpuv)
library(httr)
library(XML)
library(httpuv)
##Find OAuth settings for github
oauth_endpoints("github")
##After making application, replace key and secret below
myapp <- oauth_app("github",
key = "3cdab49f37411ce420a7",
secret = "15b444271aa808212c43308b858c34882dac3724")
##Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
##Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
content(req)
install.packages("jsonlite")
library(jsonlite)
content(req)
temp<-fromJSON(req)
temp<-fromJSON(toJSON(req))
fromJSON(toJSON(req))
fromJSON(toJSON("https://api.github.com/users/jtleek/repos"))
temp<-fromJSON(toJSON("https://api.github.com/users/jtleek/repos"))
temp
temp<-fromJSON("https://api.github.com/users/jtleek/repos")
temp
names(temp)
temp$name
temp[name=="datasharing"]
temp[tempn$ame=="datasharing"]
temp[temp$ame=="datasharing"]
x<-temp[temp$ame=="datasharing"]
x
temp[8]
temp[8,]
temp[6,]
install.packages("sqldf")
library(sqldf)
acs<-read.csv("getdata-data-ss06pid.csv")
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
data<-sqldf("select pwgtp1 from acs where AGEP < 50")
str(data)
?unique
unique(acs$AGEP)==sqldf("select unique AGEP from acs")
AGEP1<-unique(acs$AGEP)
AGEP2<-sqldf("select unique AGEP from acs")
AGEP2<-sqldf("select AGEP where unique from acs")
AGEP2<-sqldf("select distinct AGEP from acs")
AGEP2==AGEP1
AGEP1==AGEP2
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes=T)
html[10]
html
html2 = GET(url)
content2 = content(html2,as="text")
parsedHtml = htmlParse(content2,asText=TRUE)
parsedHtml
parseHtml[1]
parsedHtml = htmlParse(content2,asText=TRUE)
parsedHtml[1]
str(html)
html<-readline(url)
htmlCode = readLines(con)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode[2]
htmlCode[10]
htmlCode[10].length
length(htmlCode[10])
nchar(htmlCode[10])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
?read.fwf
data<-read.fwf("getdata-wksst8110.for")
data<-read.fwf("getdata-wksst8110.for",8110)
data
data<-read.fwf("getdata-wksst8110.for",4)
data
data<-read.fwf("getdata-wksst8110.for",9)
data
data<-read.fwf("getdata-wksst8110.for",100)
data
data<-read.fwf("getdata-wksst8110.for",200)
data
data<-read.fwf("getdata-wksst8110.for",30)
data
data[,4]
data<-read.fwf("getdata-wksst8110.for",200)
data[,4]
data
str(data)
names(data)
data<-read.fwf("getdata-wksst8110.for",8810)
data
str(data)
names(data)
data<-read.fwf("getdata-wksst8110.for",9)
data
data<-read.fwf("getdata-wksst8110.for",c(29,4))
data
data<-read.fwf("getdata-wksst8110.for",c(28,4))
data
str(data)
sum(v2)
sum(data$v2)
sum(data$v2,2)
data$v2
data$v1
data["v2"]
data[["v2"]
data[["v2"]]
data[["v2"]]
data[[1]]
data[[2]]
data[[2]]
data[[2]][5:10]
data[[2]][5:last]
data[[2]][5:nrow(data)]
sum(data[[2]][5:nrow(data)])
data<-read.fwf("getdata-wksst8110.for",c(28,4))
data
str(data)
data<-read.fwf("getdata-wksst8110.for",c(28,4),stringsAsFactors=FALSE)
data
str(data)
data[[2]][5:nrow(data)]
as.numeric(data[[2]][5:nrow(data)])
sum(as.numeric(data[[2]][5:nrow(data)]))
